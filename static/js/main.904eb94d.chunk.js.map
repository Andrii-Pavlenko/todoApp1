{"version":3,"sources":["components/Input.js","components/Buttons.js","components/ControlPanel.js","components/todoItem.js","components/TodoList.js","App.js","index.js"],"names":["Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","onSubmit","bind","assertThisInitialized","event","preventDefault","addTodo","setState","localStorage","setItem","JSON","stringify","list","lastId","_this2","react_default","a","createElement","className","placeholder","value","onChange","target","React","Component","Buttons","_ref","activeFilter","href","onClick","activeTab","ControlPanel","clearDone","style","display","filter","item","done","length","components_Buttons","find","type","TodoItem","toDelete","toggled","editText","editEnter","index","classNames","editModeItemIndex","onDoubleClick","id","concat","checked","htmlFor","title","autoFocus","defaultValue","onKeyDown","TodoList","toggledAll","listNotToShow","Fragment","map","todoItem","components_ControlPanel","App","trim","prevState","toConsumableArray","editModeItemIndexItemIndex","putInLocalStorage","_ref2","every","_objectSpread","targetId","getFromLocalStorage","lastList","parse","getItem","lastLastId","key","match","join","_this$getFromLocalSto","filtredList","components_Input","components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.904eb94d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Input extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const { addTodo } = this.props;\r\n    const { text } = this.state;\r\n\r\n    addTodo(text);\r\n    this.setState({\r\n      text: '',\r\n    },\r\n    localStorage.setItem('list', JSON.stringify(this.state.list)),\r\n    localStorage.setItem('lastId', JSON.stringify(this.state.lastId)));\r\n  }\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            className=\"new-todo\"\r\n            placeholder=\"What needs to be done?\"\r\n            value={text}\r\n            onChange={event => this.setState({ text: event.target.value })}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nfunction Buttons({ activeFilter, props }) {\r\n  return (\r\n    <ul className=\"filters\">\r\n      <li>\r\n        <a\r\n          href=\"#/\"\r\n          onClick={() => activeFilter('All')}\r\n          className={props.activeTab === 'All' ? 'selected' : 'unselected'}\r\n        >\r\n          All\r\n        </a>\r\n      </li>\r\n\r\n      <li>\r\n        <a\r\n          href=\"#/active\"\r\n          onClick={() => activeFilter('Active')}\r\n          className={props.activeTab === 'Active' ? 'selected' : 'unselected'}\r\n        >\r\n          Active\r\n        </a>\r\n      </li>\r\n\r\n      <li>\r\n        <a\r\n          href=\"#/completed\"\r\n          onClick={() => activeFilter('Completed')}\r\n          className={props.activeTab === 'Completed'\r\n            ? 'selected' : 'unselected'}\r\n        >\r\n          Completed\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport Buttons from './Buttons';\r\n\r\nfunction ControlPanel({\r\n  list, clearDone, activeFilter, props,\r\n}) {\r\n  return (\r\n    <footer className=\"footer\" style={{ display: 'block' }}>\r\n      <span className=\"todo-count\">\r\n        {list.filter(item => item.done === false).length}\r\n        items left\r\n      </span>\r\n\r\n      <Buttons\r\n        activeFilter={activeFilter}\r\n        props={props}\r\n      />\r\n\r\n      {list.find(item => item.done)\r\n        ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"clear-completed\"\r\n            style={{ display: 'block' }}\r\n            onClick={clearDone}\r\n          >\r\n            Clear completed\r\n          </button>\r\n        ) : ''}\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\r\nimport classNames from 'classnames/';\r\n\r\nfunction TodoItem({\r\n  item, toDelete, toggled, editText, editEnter, index,\r\n}) {\r\n  return (\r\n    <li\r\n      className={classNames(\r\n        item.done ? 'completed' : '',\r\n        item.editModeItemIndex === index + 1 ? 'editing' : '',\r\n      )}\r\n      onDoubleClick={() => editText(index + 1)}\r\n    >\r\n      <div className=\"view\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle\"\r\n          id={`todo-${item.id}`}\r\n          onChange={() => toggled(item.id)}\r\n          checked={item.done}\r\n        />\r\n        <label htmlFor={`todo-${item.id}`}>{ item.title }</label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"destroy\"\r\n          onClick={() => toDelete(item.id)}\r\n        />\r\n      </div>\r\n      {item.editModeItemIndex\r\n        && (\r\n          <input\r\n            type=\"text\"\r\n            className=\"edit\"\r\n            autoFocus={true}\r\n            defaultValue={item.title}\r\n            onKeyDown={event => editEnter(event)}\r\n            id={`todo-${item.id}`}\r\n          />\r\n        )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport ControlPanel from './ControlPanel';\r\nimport TodoItem from './todoItem';\r\n\r\nfunction TodoList({\r\n  list,\r\n  toDelete,\r\n  toggled,\r\n  clearDone,\r\n  toggledAll,\r\n  activeFilter,\r\n  props,\r\n  editText,\r\n  editEnter,\r\n  listNotToShow,\r\n}) {\r\n  return (\r\n    <>\r\n\r\n      <section className=\"main\" style={{ display: 'block' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"toggle-all\"\r\n          className=\"toggle-all\"\r\n          onChange={toggledAll}\r\n        />\r\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n\r\n        <ul className=\"todo-list\">\r\n          { list.map((item, index) => (\r\n            <TodoItem\r\n              item={item}\r\n              toDelete={toDelete}\r\n              toggled={toggled}\r\n              editText={editText}\r\n              editEnter={editEnter}\r\n              index={index}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n\r\n      {listNotToShow.length > 0\r\n        ? (\r\n          <ControlPanel\r\n            list={list}\r\n            clearDone={clearDone}\r\n            activeFilter={activeFilter}\r\n            props={props}\r\n          />\r\n        )\r\n        : ''}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport Input from './components/Input';\r\nimport TodoList from './components/TodoList';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      list: [],\r\n      lastId: 0,\r\n      activeTab: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { lastList, lastLastId } = this.getFromLocalStorage();\r\n\r\n    this.setState({\r\n      list: lastList,\r\n      lastId: lastLastId,\r\n    });\r\n  }\r\n\r\n  addTodo = (item) => {\r\n    if (item.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      list: [...prevState.list, {\r\n        title: item,\r\n        done: false,\r\n        id: prevState.lastId + 1,\r\n        editModeItemIndexItemIndex: null,\r\n      }],\r\n      lastId: prevState.lastId + 1,\r\n    }),\r\n    this.putInLocalStorage);\r\n  };\r\n\r\n  toDelete = (id) => {\r\n    this.setState(({ list }) => {\r\n      const slicedTodos = list.filter(item => item.id !== id);\r\n\r\n      return { list: slicedTodos };\r\n    },\r\n    this.putInLocalStorage);\r\n  };\r\n\r\n  toggledAll = () => {\r\n    this.setState(({ list }) => {\r\n      if (list.every(item => item.done === false)) {\r\n        const newList = list.map(item => ({\r\n          ...item,\r\n          done: true,\r\n        }));\r\n\r\n        return {\r\n          list: newList,\r\n        };\r\n      }\r\n\r\n      const newList = list.map(item => ({\r\n        ...item,\r\n        done: false,\r\n      }));\r\n\r\n      return {\r\n        list: newList,\r\n      };\r\n    },\r\n    this.putInLocalStorage);\r\n  };\r\n\r\n  toggled = (targetId) => {\r\n    this.setState(prevState => ({\r\n      list: [...prevState.list.map((item) => {\r\n        if (targetId === item.id) {\r\n          return { ...item, done: !item.done };\r\n        }\r\n\r\n        return item;\r\n      })],\r\n    }),\r\n    this.putInLocalStorage);\r\n  };\r\n\r\n  clearDone = () => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      list: [...prevState.list].filter(item => !item.done),\r\n    }),\r\n    this.putInLocalStorage);\r\n  };\r\n\r\n  activeFilter = (filter) => {\r\n    switch (filter) {\r\n      case 'All':\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          activeTab: 'All',\r\n        }),\r\n        this.putInLocalStorage);\r\n        break;\r\n      case 'Active':\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          activeTab: 'Active',\r\n        }),\r\n        this.putInLocalStorage);\r\n        break;\r\n      case 'Completed':\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          activeTab: 'Completed',\r\n        }),\r\n        this.putInLocalStorage);\r\n        break;\r\n      default:\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          activeTab: 'All',\r\n        }),\r\n        this.putInLocalStorage);\r\n        break;\r\n    }\r\n  };\r\n\r\n  putInLocalStorage = () => {\r\n    localStorage.setItem('list', JSON.stringify(this.state.list));\r\n    localStorage.setItem('lastId', JSON.stringify(this.state.lastId));\r\n  };\r\n\r\n  getFromLocalStorage = () => {\r\n    const list = JSON.parse(localStorage.getItem('list'));\r\n    const lastId = JSON.parse(localStorage.getItem('lastId'));\r\n\r\n    return ({\r\n      lastList: list || [],\r\n      lastLastId: lastId || 0,\r\n    });\r\n  };\r\n\r\n  editText = (index) => {\r\n    this.setState(prevState => ({\r\n      list: [...prevState.list.map(item => ({\r\n        ...item,\r\n        editModeItemIndex: index,\r\n      }))],\r\n    }),\r\n    this.putInLocalStorage);\r\n  };\r\n\r\n  editEnter = (event) => {\r\n    const { key, target } = event;\r\n    const text = target.value;\r\n    const id = +(target.id.match(/[0-9]/g).join(''));\r\n\r\n    if (key === 'Enter' && text.trim() !== '') {\r\n      this.setState(prevState => ({\r\n        list: [...prevState.list.map((item) => {\r\n          if (id === item.id) {\r\n            return {\r\n              ...item,\r\n              editModeItemIndex: false,\r\n              title: text,\r\n              id: prevState.lastId + 1,\r\n              done: false,\r\n            };\r\n          }\r\n\r\n          return item;\r\n        })],\r\n        lastId: prevState.lastId + 1,\r\n      }),\r\n      this.putInLocalStorage);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let filtredList;\r\n\r\n    switch (this.state.activeTab) {\r\n      case 'All':\r\n        filtredList = this.state.list;\r\n        break;\r\n      case 'Active':\r\n        filtredList = this.state.list.filter(item => !item.done);\r\n        break;\r\n      case 'Completed':\r\n        filtredList = this.state.list.filter(item => item.done);\r\n        break;\r\n      default:\r\n        filtredList = this.state.list;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <Input addTodo={this.addTodo} />\r\n\r\n        <TodoList\r\n          listNotToShow={this.state.list}\r\n          list={filtredList}\r\n          toDelete={this.toDelete}\r\n          clearDone={this.clearDone}\r\n          toggled={this.toggled}\r\n          toggledAll={this.toggledAll}\r\n          activeFilter={this.activeFilter}\r\n          props={this.state}\r\n          editText={this.editText}\r\n          editEnter={this.editEnter}\r\n          addTodo={this.addTodo}\r\n        />\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}